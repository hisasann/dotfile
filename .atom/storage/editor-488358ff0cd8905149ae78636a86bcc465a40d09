{"mode":"editor","version":"0.69.0","windowDimensions":{"x":0,"y":22,"width":1366,"height":742},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/yhisamatsu/Dropbox/code3/facetouch2","buffers":[{"text":"(->\n  loadDeferred = $.Deferred()\n  loadPromise = loadDeferred.promise()\n\n  # onload\n  $(window).on('load', () ->\n    # スクロール位置をトップに移動\n    $.wait(100).then(() ->\n      $('html, body').animate(\n        scrollTop: 0\n      , 1)\n      loadDeferred.resolve()\n    )\n  )\n\n  # DomReady\n  $ ->\n    # Element cache\n    $window = $('html, body')\n    main = $('#main')\n    section1 = $('#section1')\n    section2 = $('#section2')\n    section3 = $('#section3')\n    section4 = $('#section4')\n    section5 = $('#section5')\n    section6 = $('#section6')\n    section7 = $('#section7')\n    section8 = $('#section8')\n    sections = main.find('.section')\n    media = $('#media')\n    mainVideo = $('#mainVideo')\n    video = $('#contentsVideo')\n    container = $('#container')\n    loading = $('#loading')\n    canvas = $('#canvas')\n    canvasElement = canvas[0]\n    header = $('#header')\n    nav = $('#nav')\n    overlay = $('#overlay')\n    closeButton = $('#closeButton')\n    realVideo = $('#realVideo')\n    realVideoElement = realVideo[0]\n    sound1 = $('#sound1')[0]\n    sound1.volume = 0.4\n    sound2 = $('#sound2')[0]\n    sound2.volume = 0.4\n    sound3 = $('#sound3')[0]\n    sound3.volume = 0.4\n    sound4 = $('#sound4')[0]\n    sound4.volume = 0.4\n\n    loading.show()\n    sound1.play()\n\n    # Setup\n    fit = new Fit()\n    fit.setup(sections, $window)\n    Slide.setup(sections, $window)\n    Scene1.setup(section1, header, mainVideo)\n    Scene2.setup(section2)\n    Scene3.setup(section3, video)\n    Scene4.setup(section4, canvasElement)\n    Scene5.setup(section5)\n    Scene6.setup(section6)\n    Scene7.setup(section7)\n    Scene8.setup(section8)\n\n    # Image preload\n    imgLoad = imagesLoaded(container[0], (() ->))\n\n    # Video preload\n    videosPreLoad = () ->\n      # videoのロードがIEで遅く、とりあえず少しまったら再生可能とみなしてみる\n      if $._ua.IE\n        return $.when(\n          $.videoLoader(video: mainVideo)\n        )\n      else\n        deferred = $.Deferred()\n        promise = deferred.promise()\n        setTimeout(() ->\n          deferred.resolve()\n        , 2000)\n        return promise\n\n    slideUp = () ->\n      if !Slide.isAllow or Slide.current is 0\n        return\n\n      Slide.isAllow = false\n\n      scope = angular.element(nav[0]).scope()\n      scope.$apply(scope.$broadcast('choice', Slide.current - 1))\n\n      if Slide.current == 1\n        Scene2.blur().then(() ->\n          Slide.slideUp({isForce: false}, (() ->)).then(() ->\n            Scene1.focus(() ->\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 2\n        Scene3.blur().then(() ->\n          Slide.slideUp({isForce: false}, (() ->)).then(() ->\n            Scene2.focus(() ->\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 3\n        Scene4.blur().then(() ->\n          Slide.slideUp({isForce: false}, (() ->)).then(() ->\n            Scene3.focus(() ->\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 4\n        Scene5.blur().then(() ->\n          Slide.slideUp({isForce: false}, (() ->)).then(() ->\n            Scene4.focus(() ->\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 5\n        Scene6.blur().then(() ->\n          Slide.slideUp({isForce: false}, (() ->)).then(() ->\n            Scene5.focus(() ->\n              scope = angular.element(section5[0]).scope()\n              scope.$apply(scope.$broadcast('setStarted'))\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 6\n        Scene7.blur().then(() ->\n          Slide.slideUp({isForce: false}, (() ->)).then(() ->\n            Scene6.focus(() ->\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 7\n        Scene8.blur().then(() ->\n          Slide.slideUp({isForce: false}, (() ->)).then(() ->\n            Scene7.focus(() ->\n              scope = angular.element(section7[0]).scope()\n              scope.$apply(scope.$broadcast('setStarted'))\n              Slide.isAllow = true\n            )\n          )\n        )\n\n    slideDown = () ->\n      if !Slide.isAllow or Slide.current is sections.length - 1\n        return\n\n      Slide.isAllow = false\n\n      # ナビゲーション\n      scope = angular.element(nav[0]).scope()\n      scope.$apply(scope.$broadcast('choice', Slide.current + 1))\n\n      if Slide.current == 0\n        Scene1.blur().then(() ->\n          Slide.slideDown({isForce: false}, (() ->)).then(() ->\n            Scene2.focus(() ->\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 1\n        Scene2.blur().then(() ->\n          Slide.slideDown({isForce: false}, (() ->)).then(() ->\n            Scene3.focus(() ->\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 2\n        Scene3.blur().then(() ->\n          Slide.slideDown({isForce: false}, (() ->)).then(() ->\n            Scene4.focus(() ->\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 3\n        Scene4.blur().then(() ->\n          Slide.slideDown({isForce: false}, (() ->)).then(() ->\n            Scene5.focus(() ->\n              scope = angular.element(section5[0]).scope()\n              scope.$apply(scope.$broadcast('setStarted'))\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 4\n        Scene5.blur().then(() ->\n          Slide.slideDown({isForce: false}, (() ->)).then(() ->\n            Scene6.focus(() ->\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 5\n        Scene6.blur().then(() ->\n          Slide.slideDown({isForce: false}, (() ->)).then(() ->\n            Scene7.focus(() ->\n              scope = angular.element(section7[0]).scope()\n              scope.$apply(scope.$broadcast('setStarted'))\n              Slide.isAllow = true\n            )\n          )\n        )\n      else if Slide.current == 6\n        Scene7.blur().then(() ->\n          Slide.slideDown({isForce: false}, (() ->)).then(() ->\n            Scene8.focus(() ->\n              Slide.isAllow = true\n            )\n          )\n        )\n\n    # mousewheel\n    $(document).mousewheel(_.throttle((event) ->\n      if event.deltaY >= 1\n        slideUp()\n      else if event.deltaY <= 1\n        slideDown()\n    , 1500, {'trailing': false, 'leading': true}))\n\n    # resize\n    $(window).on('resize', _.throttle((event) ->\n      fit.fit().reposition(Slide.current)\n      Scene4.resize()\n    , 500, {'trailing': true, 'leading': true}))\n\n    # mouse over sound\n    $('#headerNav, #utilityNav, #movie, #movie2').on('mouseover', (e) ->\n      sound2.pause()\n      sound2.currentTime = 0\n      sound2.play()\n    )\n\n    # Overlay\n    overlay.removeClass('display-none')\n    snap = Snap(overlay.find('svg')[0])\n    path = snap.select('path')\n    steps = overlay.data('steps').split(';')\n    stepsTotal = steps.length\n    isVideoLoaded = false\n    $('#movie, #movie2').on('click', (e) ->\n      e.preventDefault()\n\n      sound4.pause()\n      sound4.currentTime = 0\n      sound4.play()\n\n      Slide.isAllow = false\n      if Slide.current == 0\n        Scene1.videoPause()\n      else if Slide.current == 2\n        Scene3.videoPause()\n      else if Slide.current == 3\n        Scene4.isAnimate = false\n\n      toggleOverlay()\n\n      playVideo = () ->\n        realVideoElement.volume = 0\n        realVideoElement.play()\n        # はじめにブツッと音がなるので、少ししてから音量を上げる\n        setTimeout(() ->\n          realVideoElement.volume = 0.8\n        , 500)\n\n      if !isVideoLoaded\n        # パフォーマンス向上のため、videoのsourceをあとからappendしてみる\n        realVideo.append('<source src=\"/movie/main_movie_full.webm\" type=\"video/webm\">\n                          <source src=\"/movie/main_movie_full.mp4\" type=\"video/mp4\">')\n#        $.videoLoader(video: realVideo, () ->\n#          playVideo()\n#          isVideoLoaded = true\n#        )\n      else\n#        playVideo()\n    )\n    closeButton.on('click', (e) ->\n      e.preventDefault()\n\n      realVideoElement.pause()\n\n      if Slide.current == 0\n        Scene1.videoPlay()\n      else if Slide.current == 2\n        Scene3.videoPlay()\n      else if Slide.current == 3\n        Scene4.isAnimate = true\n\n      toggleOverlay()\n\n      Slide.isAllow = true\n    )\n\n    toggleOverlay = ->\n      if overlay.hasClass('open')\n        pos = stepsTotal - 1\n        overlay.removeClass 'open'\n        overlay.addClass 'close'\n\n        onEndTransitionFn = (ev) ->\n          overlay.removeClass 'close'\n          return\n\n        nextStep = (pos) ->\n          pos--\n          return  if pos < 0\n          path.animate\n            path: steps[pos]\n          , 60, mina.linear, ->\n            onEndTransitionFn()  if pos is 0\n            nextStep pos\n            return\n\n          return\n\n        nextStep pos\n      else unless overlay.hasClass('close')\n        pos = 0\n        overlay.addClass 'open'\n        nextStep = (pos) ->\n          pos++\n          return  if pos > stepsTotal - 1\n          path.animate\n            path: steps[pos]\n          , 60, mina.linear, ->\n            nextStep pos\n            return\n\n          return\n\n        nextStep pos\n      return\n\n    # トップへ\n    $('#goToHeader').on('click', (e) ->\n      e.preventDefault()\n\n      Slide.isAllow = false\n      Scene8.blur(() ->\n      ).then(() ->\n        Slide.slideDirect({isForce: false}, 0, (() ->)).then(() ->\n          Scene1.focus(() ->\n            Slide.isAllow = true\n          )\n        )\n      )\n    )\n\n    # 順番に処理を進めていく\n    # videoのロード\n    firstPromise = videosPreLoad()\n    firstPromise.then(() ->\n      # imageのロード\n      return imgLoad.jqDeferred\n    ).then(() ->\n      # onload\n      return loadPromise\n    ).then(() ->\n      # 画面のフィット\n      fit.fit().reposition(Slide.current)\n\n      # videoの再生\n      Scene1.videoPlay()\n\n      # ローディングを非表示\n      loading.hide()\n      sound1.pause()\n\n      # コンテンツエリアを表示\n      container.CSS3Animation 'containerFadeIn-animate', (() =>\n        header.CSS3Animation 'headerFadeIn-animate', (() =>\n          nav.css(display: 'block').CSS3Animation 'fadeInLeft-animate', (() ->\n            Scene1.focus()\n            Slide.isAllow = true\n          ), false\n        ), false\n      ), false\n    )\n\n  angular.module('app', []).controller('nav', ($scope) ->\n    # ナビゲーション\n    $scope.overSound = angular.element('#sound2')[0]\n    $scope.overSound.volume = 0.4\n    $scope.clickSound = angular.element('#sound3')[0]\n    $scope.clickSound.volume = 0.4\n    $scope.section5 = angular.element('#section5')\n    $scope.section7 = angular.element('#section7')\n\n    $scope.$on('choice', (e, index) ->\n      $scope.refresh(index)\n    )\n\n    $scope.over = (e) ->\n      $scope.overSound.pause()\n      $scope.overSound.currentTime = 0\n      $scope.overSound.play()\n\n      return\n\n    $scope.click = (e, index) ->\n      e.preventDefault() if e\n\n      $scope.clickSound.pause()\n      $scope.clickSound.currentTime = 0\n      $scope.clickSound.play()\n\n      if !Slide.isAllow\n        return\n      if Slide.current == index\n        return\n\n      $scope.refresh(index)\n\n      Slide.isAllow = false\n      window['Scene' + (Slide.current + 1)].blur(() ->\n      ).then(() ->\n        Slide.slideDirect({isForce: false}, index, (() ->)).then(() ->\n          window['Scene' + (index + 1)].focus(() ->\n            if index + 1 is 5\n              scope = angular.element($scope.section5[0]).scope()\n              scope.$apply(scope.$broadcast('setStarted'))\n            if index + 1 is 7\n              scope = angular.element($scope.section7[0]).scope()\n              scope.$apply(scope.$broadcast('setStarted'))\n\n            Slide.isAllow = true\n          )\n        )\n      )\n      return\n\n    $scope.refresh = (index) ->\n      angular.forEach($scope.stats, (val, i) ->\n        $scope.stats[i] = false\n      )\n      $scope.stats[index] = true\n      return\n\n    $scope.stats = [true, false, false, false, false, false]\n  ).controller('slider', ($scope) ->\n    # スライダー\n    $scope.current = 0\n    $scope.pixel = 720\n    $scope.slider = angular.element('#slider')\n    $scope.li = angular.element('#slider > li')\n    $scope.sliderLi = angular.element('#sliderPager > li')\n    $scope.isClicked = false\n\n    $scope.$on('setStarted', (e) ->\n      $scope.slideShow()\n    )\n\n    $scope.click = (e, index, isClicked) ->\n      e.preventDefault() if e\n\n      if isClicked\n        $scope.isClicked = true\n\n      if $scope.current == index\n        return\n\n      $scope.refresh(index)\n\n#      if $scope.current < index\n#        $($scope.li.eq($scope.current)).CSS3Animation 'slideOut-animate', (() =>\n#        ), true\n#      else\n#        i = $scope.current - 1\n#        while (0 <= i)\n#          $($scope.li.eq(i)).CSS3Animation 'slideIn-animate', (() =>\n#          ), true\n#          i--\n      $scope.current = index\n      $scope.slider.css($scope.doTranslate(-$scope.pixel * index))\n\n      return\n\n    $scope.prev = (e) ->\n      e.preventDefault()\n\n      $scope.isClicked = true\n\n      if $scope.current <= 0\n        return\n\n      $scope.current--\n\n      $scope.refresh($scope.current)\n\n#      $($scope.li.eq($scope.current)).CSS3Animation 'slideIn-animate', (() ->\n#      ), true\n      $scope.slider.css($scope.doTranslate(-$scope.pixel * $scope.current))\n      return\n\n    $scope.next = (e) ->\n      e.preventDefault()\n\n      $scope.isClicked = true\n\n      if $scope.current >= $scope.stats.length - 1\n        return\n\n#      $($scope.li.eq($scope.current)).CSS3Animation 'slideOut-animate', (() =>\n#      ), true\n\n      $scope.current++\n\n      $scope.refresh($scope.current)\n\n      $scope.slider.css($scope.doTranslate(-$scope.pixel * $scope.current))\n      return\n\n    $scope.refresh = (index) ->\n      angular.forEach($scope.stats, (val, i) ->\n        $scope.stats[i] = false\n      )\n      $scope.stats[index] = true\n      return\n\n    $scope.stats = [true, false, false, false, false]\n\n    $scope.doTranslate = (pixels) ->\n      \"-webkit-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\"\n      \"-moz-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\"\n      \"-o-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\"\n      \"-ms-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\"\n      transform: \"translate3d(\" + pixels + \"px, 0px,0px)\"\n\n    $scope.slideShow = () ->\n      setTimeout(() ->\n        if $scope.isClicked\n          $scope.slideShow()\n          return\n\n        if $scope.li.length - 1 <= $scope.current\n          $scope.click(null, 0)\n        else\n          $scope.click(null, $scope.current + 1)\n        $scope.$digest()\n        $scope.slideShow()\n      , 3500)\n  ).controller('slider2', ($scope) ->\n    # スライダー\n    $scope.current = 0\n    $scope.pixel = 1060\n    $scope.slider = angular.element('#slider2')\n    $scope.li = angular.element('#slider2 > li')\n    $scope.sliderLi = angular.element('#sliderPager2 > li')\n    $scope.isClicked = false\n\n    $scope.$on('setStarted', (e) ->\n      $scope.slideShow()\n    )\n\n    $scope.click = (e, index, isClicked) ->\n      e.preventDefault() if e\n\n      if isClicked\n        $scope.isClicked = true\n\n      if $scope.current == index\n        return\n\n      $scope.refresh(index)\n\n#      if $scope.current < index\n#        $($scope.li.eq($scope.current)).CSS3Animation 'slide2Out-animate', (() =>\n#        ), true\n#      else\n#        i = $scope.current - 1\n#        while (0 <= i)\n#          $($scope.li.eq(i)).CSS3Animation 'slide2In-animate', (() =>\n#          ), true\n#          i--\n      $scope.current = index\n      $scope.slider.css($scope.doTranslate(-$scope.pixel * index))\n\n      return\n\n    $scope.prev = (e) ->\n      e.preventDefault()\n\n      $scope.isClicked = true\n\n      if $scope.current <= 0\n        return\n\n      $scope.current--\n\n      $scope.refresh($scope.current)\n\n      $scope.slider.css($scope.doTranslate(-$scope.pixel * $scope.current))\n      return\n\n    $scope.next = (e) ->\n      e.preventDefault()\n\n      $scope.isClicked = true\n\n      if $scope.current >= $scope.stats.length - 1\n        return\n\n      $scope.current++\n\n      $scope.refresh($scope.current)\n\n      $scope.slider.css($scope.doTranslate(-$scope.pixel * $scope.current))\n      return\n\n    $scope.refresh = (index) ->\n      angular.forEach($scope.stats, (val, i) ->\n        $scope.stats[i] = false\n      )\n      $scope.stats[index] = true\n      return\n\n    $scope.stats = [true, false, false]\n\n    $scope.doTranslate = (pixels) ->\n      \"-webkit-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\"\n      \"-moz-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\"\n      \"-o-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\"\n      \"-ms-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\"\n      transform: \"translate3d(\" + pixels + \"px, 0px,0px)\"\n\n    $scope.slideShow = () ->\n      setTimeout(() ->\n        if $scope.isClicked\n          $scope.slideShow()\n          return\n\n        if $scope.li.length - 1 <= $scope.current\n          $scope.click(null, 0)\n        else\n          $scope.click(null, $scope.current + 1)\n        $scope.$digest()\n        $scope.slideShow()\n      , 3500)\n  )\n)()\n","markers":{"markers":{"1":{"id":1,"range":[[13,3],[13,3]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":44,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/yhisamatsu/Dropbox/code3/facetouch2/pc/facetouch/source/javascripts/index.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"03795c2789f56493fd50f86820387699f4af54b8","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":44,"softTabs":true,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":45,"softWrap":false,"editorWidthInChars":106,"tokenizedBuffer":{"bufferPath":"/Users/yhisamatsu/Dropbox/code3/facetouch2/pc/facetouch/source/javascripts/index.coffee","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/yhisamatsu/Dropbox/code3/facetouch2/pc/facetouch/source/javascripts/index.coffee","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"command-logger":{"eventLog":{"symbols-view:toggle-file-symbols":{"count":4,"name":"symbols-view:toggle-file-symbols","lastRun":1397373222799},"core:move-down":{"count":112,"name":"core:move-down","lastRun":1397373517105},"tree-view:expand-directory":{"count":1,"name":"tree-view:expand-directory","lastRun":1397373192455},"core:move-up":{"count":7,"name":"core:move-up","lastRun":1397373511251},"tree-view:open-selected-entry":{"count":1,"name":"tree-view:open-selected-entry","lastRun":1397373195772},"vim-mode:reset-command-mode":{"count":1,"name":"vim-mode:reset-command-mode","lastRun":1397373197751},"vim-mode:move-down":{"count":147,"name":"vim-mode:move-down","lastRun":1397373350107},"core:page-down":{"count":8,"name":"core:page-down","lastRun":1397373520649},"vim-mode:move-up":{"count":29,"name":"vim-mode:move-up","lastRun":1397373352286},"core:page-up":{"count":4,"name":"core:page-up","lastRun":1397373521179},"vim-mode:move-to-next-word":{"count":5,"name":"vim-mode:move-to-next-word","lastRun":1397373219439},"vim-mode:move-right":{"count":3,"name":"vim-mode:move-right","lastRun":1397373228037},"editor:consolidate-selections":{"count":2,"name":"editor:consolidate-selections","lastRun":1397373231003},"fuzzy-finder:toggle-file-finder":{"count":1,"name":"fuzzy-finder:toggle-file-finder","lastRun":1397373229504},"core:backspace":{"count":4,"name":"core:backspace","lastRun":1397373364691},"highlight-line:toggle-background":{"count":2,"name":"highlight-line:toggle-background","lastRun":1397373345967},"highlight-line:toggle-underline":{"count":1,"name":"highlight-line:toggle-underline","lastRun":1397373342859},"pane:show-next-item":{"count":1,"name":"pane:show-next-item","lastRun":1397373354117},"pane:show-previous-item":{"count":1,"name":"pane:show-previous-item","lastRun":1397373355369},"color-picker:open":{"count":1,"name":"color-picker:open","lastRun":1397373392471},"editor:move-to-first-character-of-line":{"count":2,"name":"editor:move-to-first-character-of-line","lastRun":1397373506670},"core:select-down":{"count":14,"name":"core:select-down","lastRun":1397373511068},"core:move-to-top":{"count":2,"name":"core:move-to-top","lastRun":1397373523160},"core:move-to-bottom":{"count":1,"name":"core:move-to-bottom","lastRun":1397373522721},"application:quit":{"count":1,"name":"application:quit","lastRun":1397373583775}}},"fuzzy-finder":{"/Users/yhisamatsu/Dropbox/code3/facetouch2/pc/facetouch/source/javascripts/index.coffee":1397373553902},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":434996},"tree-view":{"directoryExpansionStates":{"pc":{"facetouch":{"source":{"javascripts":{}}}},"sp":{"facetouch":{}}},"selectedPath":"/Users/yhisamatsu/Dropbox/code3/facetouch2/pc/facetouch/source/javascripts/index.coffee","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":289}}}