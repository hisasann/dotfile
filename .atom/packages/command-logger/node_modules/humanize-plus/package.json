{
  "name": "humanize-plus",
  "title": "Humanize",
  "description": "A simple utility library for making the web more humane.",
  "version": "1.4.2",
  "homepage": "https://github.com/HubSpot/humanize",
  "main": "./public/src/humanize.js",
  "author": {
    "name": "HubSpotDev",
    "email": "devteam@hubspot.com",
    "url": "dev.hubspot.com"
  },
  "maintainers": [
    {
      "name": "Jonathan Kim",
      "email": "me@jonathan-kim.com",
      "url": "http://jonathan-kim.com"
    },
    {
      "name": "Bryan Ash",
      "email": "ashbryanct@gmail.com",
      "url": "http://github.com/b-ash"
    },
    {
      "name": "Andy Aylward",
      "email": "aaylward@gmail.com",
      "url": "http://github.com/aaylward"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/HubSpot/humanize.git"
  },
  "publishConfig": {
    "registry": "http://registry.npmjs.org"
  },
  "bugs": {
    "url": "https://github.com/HubSpot/humanize/issues"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "grunt jasmine"
  },
  "dependencies": {},
  "readmeFilename": "README.md",
  "devDependencies": {
    "grunt": "~0.3.15",
    "grunt-coffee": "0.0.x",
    "grunt-jasmine-runner": "0.6.x"
  },
  "readme": "# Humanize Plus [![Build Status](https://travis-ci.org/HubSpot/humanize.png?branch=master)](https://travis-ci.org/HubSpot/humanize)\n\nA simple utility library for making the web more humane.\n\n## Getting Started\n\nHumanize Plus is available via node package manager.\n\n`npm install humanize-plus`\n\nOr download the [minified version][min] or the [full version][max].\n\n[min]: https://raw.github.com/HubSpot/humanize/master/public/src/humanize.min.js\n[max]: https://raw.github.com/HubSpot/humanize/master/public/src/humanize.js\n\nIn your web page:\n\n```html\n<script src=\"public/humanize.min.js\"></script>\n<script>\nvar capitalized = Humanize.capitalize(\"ten tiny ducklings.\")\n// \"Ten tiny ducklings.\"\n</script>\n```\n\nIn your node package.json:\n```javascript\n\"dependencies\": {\n  \"humanize-plus\": \"1.4.x\"\n}\n```\n\nFor recent changes, see the [Release Notes](https://github.com/HubSpot/humanize#release-notes) section.\n\n## API Methods\n\n### Numbers\n\n##### formatNumber\nFormats a number to a human-readable string. Localize by overriding the precision, thousand and decimal arguments.\n\n```javascript\nHumanize.formatNumber(123456789, 2)\n// \"123,456,789.00\"\n```\n\n##### intComma\nConverts an integer to a string containing commas every three digits.\n\n```javascript\nHumanize.intComma(123456789)\n// \"123,456,789\"\n```\n##### intcomma - DEPRECATED - This method will not be present in the next major version.\nAlias for `intComma`\n\n\n##### intword - DEPRECATED - This method will not be present in the next major version.\nConverts a large integer to a friendly text representation.\nThis method is now a thin wrapper around compactInteger\n\n`Humanize.intword(num, ch, de) === Humanize(num, de)`\n\n```javascript\nHumanize.intword(123456789, 'nopnopnopnop', 1)\n// \"123.5M\"\n\nHumanize.intword(123456789, 'this is a nop', 3)\n// \"123.457M\"\n\nHumanize.intword(10, 'still a nop', 1)\n// \"10.0\"\n```\n\n##### compactInteger\nConverts an integer into its most compact representation.\n\n```javascript\nHumanize.compactInteger(123456789, 1)\n// \"123.5M\"\n\n// Switch to scientific notation for trillons, because no one knows those abbreviations.\nHumanize.compactInteger(-7832186132456328967, 4)\n// \"-7.8322x10^18\"\n\nHumanize.compactInteger(-100, 2)\n// \"-100.00\"\n```\n\n##### boundedNumber\nBounds a value from above. Modified values have customizable ending strings ('+' by default)\n\n```javascript\nHumanize.boundedNumber(110, 100)\n// \"100+\"\n\nHumanize.boundedNumber(50, 100)\n// \"50\"\n```\n\n##### truncatenumber - DEPRECATED - This method will not be present in the next major version.\nAlias for `boundedNumber`\n\n##### ordinal\nConverts an integer to its ordinal as a string.\n\n```javascript\nHumanize.ordinal(22)\n// \"22nd\"\n```\n\n##### times\nInterprets numbers as occurences. Also accepts an optional array/map of overrides.\n\n```javascript\nfor (i=0; i<5; i++) {\n  Humanize.times(i, {\"4\": \"too many\"});\n  // Bonus!\n  if (i === 1) {\n    Humanize.times(1.1);\n  }\n}\n// never\n// once\n// 1.1 times\n// twice\n// 3 times\n// too many times\n```\n\n##### pace\nMatches a pace (value and interval) with a logical time frame. Very useful for slow paces.\n\n```javascript\nsecond = 1000\nweek = 6.048e8\ndecade = 3.156e11\n\nHumanize.pace(1.5, second, \"heartbeat\")\n// Approximately 2 heartbeats per second\n\nHumanize.pace(4, week)\n// Approximately 4 times per week\n\nHumanize.pace(1, decade, \"life crisis\")\n// Less than 1 life crisis per week\n```\n\n##### fileSize\nFormats the value like a 'human-readable' file size (i.e. '13 KB', '4.1 MB', '102 bytes', etc).\n\n```javascript\nHumanize.fileSize(1024 * 20)\n// \"20 Kb\"\n\nHumanize.fileSize(1024 * 2000)\n// \"1.95 Mb\"\n\nHumanize.fileSize(Math.pow(1000, 4))\n// \"931.32 Gb\"\n```\n##### filesize - DEPRECATED - This method will not be present in the next major version.\nAlias for `fileSize`\n\n\n##### pluralize\nReturns the plural version of a given word if the value is not 1. The default suffix is 's'.\n\n```javascript\nHumanize.pluralize(1, \"duck\")\n// \"duck\"\n\nHumanize.pluralize(3, \"duck\")\n// \"ducks\"\n\nHumanize.pluralize(3, \"duck\", \"duckies\")\n// \"duckies\"\n```\n\n### Strings\n\n##### truncate\nTruncates a string if it is longer than the specified number of characters. Truncated strings will end with a translatable ellipsis sequence (\"â€¦\").\n\n```javascript\nHumanize.truncate('long text is good for you')\n// \"long text is good for you\"\n\nHumanize.truncate('long text is good for you', 19)\n// \"long text is goo...\"\n\nHumanize.truncate('long text is good for you', 19, '... etc')\n// \"long text is... etc\"\n```\n\n##### truncateWords\nTruncates a string after a certain number of words.\n\n```javascript\nHumanize.truncateWords('long text is good for you', 5)\n// \"long text is good for ...\"\n```\n\n##### truncatewords - DEPRECATED - This method will not be present in the next major version.\nAlias for `truncateWords`\n\n##### nl2br and br2nl\nFlexible conversion of `<br/>` tags to newlines and vice versa.\n\n```javascript\n// Use your imagination\n```\n\n##### capitalize\nCapitalizes the first letter in a string, optionally downcasing the tail.\n\n```javascript\nHumanize.capitalize(\"some boring string\")\n// \"Some boring string\"\n\nHumanize.capitalize(\"wHoOaA!\")\n// \"WHoOaA!\"\n\nHumanize.capitalize(\"wHoOaA!\", true)\n// \"Whooaa!\"\n```\n\n##### capitalizeAll\nCaptializes the first letter of every word in a string.\n\n```javascript\nHumanize.capitalizeAll(\"some boring string\")\n// \"Some Boring String\"\n```\n\n##### titleCase\nIntelligently capitalizes eligible words in a string and normalizes internal whitespace.\n\n```javascript\nHumanize.titleCase(\"some of a boring string\")\n// \"Some of a Boring String\"\n\nHumanize.titleCase(\"cool the          iTunes cake, O'Malley!\")\n// \"Cool the iTunes Cake, O'Malley!\"\n```\n\n##### titlecase - DEPRECATED - This method will not be present in the next major version.\nAlias for `titleCase`\n\n\n### Arrays\n\n##### oxford\nConverts a list of items to a human readable string with an optional limit.\n\n```javascript\nitems = ['apple', 'orange', 'banana', 'pear', 'pineapple']\n\nHumanize.oxford(items)\n// \"apple, orange, banana, pear, and pineapple\"\n\nHumanize.oxford(items, 3)\n// \"apple, orange, banana, and 2 others\"\n\n// Pluralizes properly too!\nHumanize.oxford(items, 4)\n// \"apple, orange, banana, pear, and 1 other\"\n\nHumanize.oxford(items, 3, \"and some other fruits\")\n// \"apple, orange, banana, and some other fruits\"\n```\n\n##### frequency\nDescribes how many times an item appears in a list\n\n```javascript\naznPics = [\n  'http://24.media.tumblr.com/77082543cb69af56ede38a0cdb2511d0/tumblr_mh96olWPLv1r8k4ywo1_1280.jpg',\n  'http://25.media.tumblr.com/3e2d318be34d5ef8f86a612cd1d795ff/tumblr_mhbhb96t3z1r8k4ywo1_1280.jpg',\n  'http://24.media.tumblr.com/8c5a052e33c27c784514e1b124b383a1/tumblr_mhexaqrk0w1r8k4ywo1_1280.jpg'\n]\nbigfootPics = []\n\n\"Asians \" + Humanize.frequency(aznPics, \"took pictures of food\")\n// \"Asians took pictures of food 3 times\"\n\n\"Bigfoot \" + Humanize.frequency(bigfootPics, \"took pictures of food\")\n// \"Bigfoot never took pictures of food\"\n```\n\n\n### Utility methods\n\n##### toFixed\nFixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\").\n\n```javascript\nHumanize.toFixed(0.615, 2)\n// \"0.61\"\n```\n\n##### normalizePrecision\nEnsures precision value is a positive integer.\n\n```javascript\nHumanize.normalizePrecision(-232.231)\n// 232\n```\n\n## Important notes\nPlease don't edit files in the `public` subdirectory as they are generated via grunt. You'll find source code in the `coffee` subdirectory!\n\n## Compiling\n\n### Installing grunt\n_This assumes you have [node.js](http://nodejs.org/) and [npm](http://npmjs.org/) installed already._\n\n1. From the root directory of this project, run `npm install` to install the project's dependencies.\n\nAnd that's it!\n\nOnce grunt is installed, just run \"grunt\" in the root directory of the project to compile the CoffeeScript files into the public/ subdirectory.\n\n## Testing\n\n### Installing PhantomJS\n\nIn order for the test task to work properly, [PhantomJS](http://www.phantomjs.org/) must be installed and in the system PATH (if you can run \"phantomjs\" at the command line, this task should work).\n\nUnfortunately, PhantomJS cannot be installed automatically via npm or grunt, so you need to install it yourself. There are a number of ways to install PhantomJS.\n\n* [PhantomJS and Mac OS X](http://ariya.ofilabs.com/2012/02/phantomjs-and-mac-os-x.html)\n* [PhantomJS Installation](http://code.google.com/p/phantomjs/wiki/Installation) (PhantomJS wiki)\n\nNote that the `phantomjs` executable needs to be in the system `PATH` for grunt to see it.\n\n* [How to set the path and environment variables in Windows](http://www.computerhope.com/issues/ch000549.htm)\n* [Where does $PATH get set in OS X 10.6 Snow Leopard?](http://superuser.com/questions/69130/where-does-path-get-set-in-os-x-10-6-snow-leopard)\n* [How do I change the PATH variable in Linux](https://www.google.com/search?q=How+do+I+change+the+PATH+variable+in+Linux)\n\n## Release Notes\n\n### 1.4.2\n\n- fix [#41](https://github.com/HubSpot/humanize/issues/41) \n\n### 1.4.1\n\n- documentation update for npm\n\n### 1.4.0\n\n- add optional `downCaseTail` argument to [Humanize.capitalize](https://github.com/HubSpot/humanize#capitalize)\n- add camelCase aliases\n   - `intComma`       -> `intcomma`\n   - `fileSize`       -> `filesize`\n   - `truncateWords`  -> `truncatewords`\n   - `boundedNumber`  -> `truncatenumber`\n   - `titleCase`      -> `titlecase`\n\n- optimize internal `doTitleCase` method\n- remove unused helper methods\n- add default arguments for `truncate`\n\n### 1.3.5\n- [Release Notes](https://github.com/HubSpot/humanize/tree/master#release-notes) added to README\n\n### 1.3.4\n- fix [#33](https://github.com/HubSpot/humanize/issues/33)\n\n### 1.3.3\n\n- fix [#27](https://github.com/HubSpot/humanize/issues/27)\n\n## License\nCopyright (c) 2013 HubSpotDev\nLicensed under the MIT license.\n",
  "_id": "humanize-plus@1.4.2",
  "dist": {
    "shasum": "6b1d78ea47926682a5cedd9ff13b6fd8c18280ca"
  },
  "_from": "humanize-plus@~1.4.2",
  "_resolved": "https://registry.npmjs.org/humanize-plus/-/humanize-plus-1.4.2.tgz"
}
